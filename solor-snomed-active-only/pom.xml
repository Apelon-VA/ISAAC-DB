<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- Parent project -->
	<parent>
		<groupId>gov.va.isaac.db</groupId>
		<artifactId>isaac-db-parent</artifactId>
		<version>Sprint_19-SNAPSHOT</version>
	</parent>

	<!-- Project metadata -->
	<packaging>pom</packaging>
	<artifactId>solor-snomed</artifactId>
	<version>2015.02.16-SNAPSHOT</version>
	<description>A SOLOR database, including sct-econcept-2015.01.31-build-5-active-only</description>
	
	<name>ISAAC DB Assembly</name>

	<properties>
		<!-- For no classifier, leave this blank or remove it entirely-->
		<resultArtifactClassifier>active-only</resultArtifactClassifier>
		
		<!-- Don't edit these -->
		<project.type>bdb.zip</project.type>
		<project.classifier>${resultArtifactClassifier}</project.classifier>
	</properties>
	
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>Copyright Notice
				This is a work of the U.S. Government and is not subject to copyright
				protection in the United States. Foreign copyrights may apply.
			</comments>
		</license>
		<license>
			<name>SNOMED CT affiliate license agreement</name>
			<url>https://uts.nlm.nih.gov/help/license/LicenseAgreement.pdf</url>
			<comments>The SNOMED CT content packaged by this module is governed by the SNOMED CT affiliate license agreement</comments>
		</license>
	</licenses>

	<!-- Dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.ihtsdo.sct.baseline</groupId>
			<artifactId>sct-econcept</artifactId>
			<version>2015.01.31-build-5</version>
			<classifier>active-only</classifier>
			<type>zip</type>
			<scope>compile</scope>
			<optional>true</optional>  <!-- Not needed at runtime -->
			<!-- Sigh... SCT is defined in a particularly silly way... need to exclude 
				all of these, to not waste everyones time fetching them -->
			<exclusions>
				<exclusion>
					<groupId>org.ihtsdo.sct.rf2</groupId>
					<artifactId>sct-rf2-arf-econcept-full</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.ihtsdo.sct</groupId>
					<artifactId>mrcm-refset-specs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.ihtsdo</groupId>
					<artifactId>tk-spelling-variants</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.ihtsdo</groupId>
					<artifactId>tk-case-sensitive-words</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<!-- Unpack data projects, load econcepts files, create ISAAC path, repack database -->
	<build>
		<plugins>

			<plugin>
				<!-- metadata we want in the output package -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>copy metadata files</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<!-- Copy the things necessary to reproduce the build -->
								<copy filtering="false"
									toDir="${project.build.directory}/${project.build.finalName}${resultArtifactClassifierWithLeadingHyphen}.bdb/META-INF/maven/${project.groupId}/${project.artifactId}/">
									<fileset dir="${basedir}">
										<include name="*.txt"/>
										<include name="*.xml"/>
									</fileset>
									<fileset dir="${basedir}">
										<include name="src/**/*"/>
									</fileset>
								</copy>
								
								<!-- Create a file with the active build properties -->
								<echoproperties destfile="${project.build.directory}/${project.build.finalName}${resultArtifactClassifierWithLeadingHyphen}.bdb/META-INF/maven/${project.groupId}/${project.artifactId}/pom.properties"/>
								
								<!-- Setup the manifest, copy the license files -->
								<copy filtering="false"
									toDir="${project.build.directory}/${project.build.finalName}${resultArtifactClassifierWithLeadingHyphen}.bdb/META-INF/">
									<fileset dir="${basedir}">
										<include name="LICENSE.txt"/>
										<include name="NOTICE.txt"/>
									</fileset>
								</copy>
								
								<!-- Write a manifest file, with properties filled in -->
								<copy filtering="true"
									toDir="${project.build.directory}/${project.build.finalName}${resultArtifactClassifierWithLeadingHyphen}.bdb/META-INF/">
									<fileset dir="${basedir}/src/assembly/">
										<include name="MANIFEST.MF"/>
									</fileset>
									<filterset begintoken="${" endtoken="}"
										filtersfile="${project.build.directory}/${project.build.finalName}${resultArtifactClassifierWithLeadingHyphen}.bdb/META-INF/maven/${project.groupId}/${project.artifactId}/pom.properties"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>unpack-econcept</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>org.ihtsdo.sct.baseline</includeGroupIds>
							<includeArtifactIds>sct-econcept</includeArtifactIds>
							<outputDirectory>${project.build.directory}/generated-resources/sct-econcept</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>gov.va.isaac.modules</groupId>
				<artifactId>mojos</artifactId>
				<version>${isaac.version}</version>
				<executions>
					<execution>
						<id>setup store</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>setup-terminology-store</goal>
						</goals>
						<configuration>
							<bdbFolderLocation>${project.build.directory}/${project.build.finalName}${resultArtifactClassifierWithLeadingHyphen}.bdb/berkeley-db</bdbFolderLocation>
						</configuration>
					</execution>

					<execution>
						<id>load-econcept</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>load-index-bdb</goal>
						</goals>
						<configuration>
							<setupAndShutdown>false</setupAndShutdown>
							<econFileStrings>
								<econFileString>${project.build.directory}/generated-resources/sct-econcept/eConcepts.jbin</econFileString>
							</econFileStrings>
							<terminologyRoots>
								<MojoConceptSpec>
									<fsn>SNOMED CT Concept (SNOMED RT+CTV3)</fsn>
									<uuid>ee9ac5d2-a07c-3981-a57a-f7f26baf38d8</uuid>
								</MojoConceptSpec>
							</terminologyRoots>
						</configuration>
					</execution>

					<!-- Creates the ISAAC paths - f5c0a264-15af-5b94-a964-bb912ea5634f -->
					<execution>
						<id>create-isaac-origin-path</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>create-path</goal>
						</goals>
						<configuration>
							<pathFsn>ISAAC development path origin</pathFsn>
							<pathPrefTerm>ISAAC development path origin</pathPrefTerm>
							<originPathUuids>
								<!-- SNOMED Core -->
								<uuid>8c230474-9f11-30ce-9cad-185a96fd03a2</uuid>
							</originPathUuids>
							<!-- The parent of ISAAC Path, the "release" concept, also parent of SNOMED Core -->
							<parentPathUuid>88f89cc0-1d94-34a4-85ed-aa1949079314</parentPathUuid>
						</configuration>
					</execution>

					<execution>
						<id>create-isaac-dev-path</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>create-path</goal>
						</goals>
						<configuration>
							<pathFsn>ISAAC development path</pathFsn>
							<pathPrefTerm>ISAAC development path</pathPrefTerm>
							<originPathFsns>
								<fsn>ISAAC development path origin</fsn>
							</originPathFsns>
							<!-- The parent of ISAAC Path, the "release" concept, also parent of SNOMED Core -->
							<parentPathUuid>88f89cc0-1d94-34a4-85ed-aa1949079314</parentPathUuid>
						</configuration>
					</execution>

					<execution>
						<id>create-isaac-release-path</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>create-path</goal>
						</goals>
						<configuration>
							<pathFsn>ISAAC release path</pathFsn>
							<pathPrefTerm>ISAAC release path</pathPrefTerm>
							<originPathFsns>
								<fsn>ISAAC development path</fsn>
							</originPathFsns>
							<!-- The parent of ISAAC Path, the "release" concept, also parent of SNOMED Core -->
							<parentPathUuid>88f89cc0-1d94-34a4-85ed-aa1949079314</parentPathUuid>
						</configuration>
					</execution>

					<!-- Creates the information model metadata -->
					<execution>
						<id>create-info-model-metadata</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>create-metadata</goal>
						</goals>
					</execution>

					<!-- Shutdown database -->
					<execution>
						<id>shutdown</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>shutdown-terminology-store</goal>
						</goals>
						<configuration />
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>zip</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>${basedir}/src/assembly/assembly.xml</descriptor>
							</descriptors>
							<attach>false</attach>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>attach-artifact</id>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<type>bdb.zip</type>
									<!-- Note that the assembly plugin doesn't use the same classifier - we hack the classifier it returns to be a mis
									mash of classifier and part of type.  So there is always a classifier on the produced zip file, even if no classifier
									was specified by the user.  During artifact attachment, this classifier/type mess is corrected. -->
									<file>${project.build.directory}/${project.build.finalName}-${resultArtifactClassifier}.bdb.zip</file>
									<classifier>${resultArtifactClassifier}</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
